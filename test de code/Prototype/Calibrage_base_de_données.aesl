<!DOCTYPE aesl-source>
<network>


<!--list of global events-->
<event size="20" name="distance"/>
<event size="10" name="reste"/>
<event size="20" name="rotation"/>


<!--node Thymio sur DESKTOP-V5RDJ31 - 13692-->
<node nodeId="{0f070a75-9be5-4944-923d-794bbe0de28f}" name="Thymio sur DESKTOP-V5RDJ31 - 13692"><![CDATA[var rottab[20]=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
var disttab[20]=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
var L[8]=[0,0,0,0,0,0,0,0]
var colour=10
var vitesse=25
var amorce=0
var rotswitch=0
var change=0
var etatg
var etatd
var i=0
var j=0
var begin=0
callsub verif
call leds.top(0,0,0)
timer.period[1]=100 #100ms =0,1 secondes
sub zero
	rotswitch=0
	rottab=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
	disttab=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
	amorce=0
	i=0
	j=0
	L=[0,0,0,0,0,0,0,0]
	colour=10
	begin=0
	vitesse=25
	motor.left.target=0
	motor.right.target=0
sub verif
	call leds.circle(L[0],L[1],L[2],L[3],L[4],L[5],L[6],L[7])
sub j0
	if j>=8 then
		j=0
	end
sub i0
	if i>=20 and vitesse>500 then
					begin=0
					i=0
					call leds.top(0,0,0)
					L=[0,0,0,0,0,0,0,0]
					callsub verif
					j=0
					colour=10
					vitesse=25
				end
onevent timer1
etatg=prox.ground.delta[0] #lecture gauche
etatd=prox.ground.delta[1] #lecture droite
emit reste [etatg,etatd,colour,begin,rotswitch,change,amorce,i,j,vitesse]
if  change== 0 then
	emit rotation [rottab]
	if  begin==0 then
		motor.left.target=0
		motor.right.target=0
	end
	if  begin==1 then
		motor.left.target=vitesse
		motor.right.target=-vitesse
		if  rotswitch==0 then
			if  amorce==1 then
				L[j]+=10
				call leds.top(colour,0,0)
				callsub verif
				vitesse+=25
				i++
				j++
				callsub j0
				amorce=0
				callsub i0
			end
			if etatd>=500 then
				rotswitch=1
			end	
		end
		if  rotswitch==1 then
			rottab[i]++
			amorce=1
			if  etatd<500 then
				rotswitch=0
			end
		end
	end
end
if change==1 then
	emit distance [disttab]
	if  begin==1 then
		if  amorce==0 then
			if etatg <200 and etatd<200 then
				motor.left.target=vitesse
				motor.right.target=vitesse
				amorce=1
				disttab[i]++
				call leds.top(0,colour,colour)
				colour++
			else
				motor.left.target=125
				motor.right.target=125
			end			
		end
		if  amorce==1 then
			if etatg>=200 and etatd>=200 then
				begin=0
				amorce=0
				motor.left.target=0
				motor.right.target=0
				L[j]+=10
				vitesse+=25
				callsub verif
				i++
				j++
				callsub j0
				callsub i0
			else
				motor.left.target=vitesse
				motor.right.target=vitesse
				disttab[i]++
			end	
		end
	end
end
onevent button.center
if  button.center==1 then
		begin=1
end
onevent button.forward
if  button.forward==1 then
	change++
	if  change==2 then
		change=0
	end
	if  change==0 then
		call leds.bottom.left (32,0,0)
		call leds.bottom.right (32,0,0)
	else
		call leds.bottom.left (0,32,0)
		call leds.bottom.right (0,32,0)
	end
end
onevent button.backward #arrêt manuel basé sur n'importe quelle valeur détectée par les capteurs de proximité
	if   (etatg>=0 and etatd >=0) then
		call leds.top(32,32,0)
		call leds.circle(0,0,0,0,0,0,0,0)
		callsub zero
	end]]></node>


</network>
